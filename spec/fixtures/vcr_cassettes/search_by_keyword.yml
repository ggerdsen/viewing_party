---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<dont_share_my_key>&page=1&query=sunset
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Oct 2020 11:10:31 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=120
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 ac28147bf6a75debb0811f62b6224e6f.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - IAD89-C3
      X-Amz-Cf-Id:
      - TTsP6GuRFVsSivabhoOV09aM-q6jDDlEslN6FF5EWKO46AjzGcgZ2Q==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Oct 2020 11:10:31 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<dont_share_my_key>&page=2&query=sunset
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Oct 2020 11:10:31 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=120
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 1fa3f854976309f3d11907ad7125291a.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - IAD89-C3
      X-Amz-Cf-Id:
      - 3IQrJD0N93myZez2aA_zHQTJhGhHG14s5gqwUVO9RKM9Z-WlN57Crg==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Oct 2020 11:10:31 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/top_rated?api_key=<dont_share_my_key>&page=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Oct 2020 11:06:13 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=21600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 b471d3775e81a9be536b52b99f39452a.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - IAD89-C3
      X-Amz-Cf-Id:
      - VSjwum6-f9MlkeCm2auU1r2lLIKNI3TGVWO8PexN65XQgNjf4AzbHA==
      Age:
      - '258'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Oct 2020 11:10:31 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/top_rated?api_key=<dont_share_my_key>&page=2
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Oct 2020 11:06:13 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=21600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 3dcb635971b5d310e8941cdb963aff70.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - IAD89-C3
      X-Amz-Cf-Id:
      - uLGqePN12l6A0IkrxlTCAYldTTyWqC_SMw6P4bcT5_ur_mixj8ylJg==
      Age:
      - '258'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Oct 2020 11:10:31 GMT
recorded_with: VCR 6.0.0
